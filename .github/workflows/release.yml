name: Release

on:
  workflow_dispatch:
# on:
#   release:
#     types: [published]

jobs:
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            triple: x86_64-pc-windows-msvc
            arch: x64
          - os: windows-latest
            triple: i686-pc-windows-msvc
            arch: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.arch }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - uses: actions/cache@v4
        with:
          path: ~\AppData\Local\Mozilla\sccache
          key: ${{ runner.os }}-${{ matrix.triple }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.triple }}-sccache-

      - name: Build wheels
        uses: PyO3/maturin-action@v1.49.4
        with:
          target: ${{ matrix.triple }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.triple }}
          path: dist
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Build sdist
        uses: PyO3/maturin-action@v1.49.4
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist
  
  publish:
    name: Publish to PyPI
    needs: [windows]
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist/

      - name: List downloaded wheels
        run: |
          echo "Contents of dist directory:"
          ls -la dist/ || echo "No dist directory found"
          echo "Wheel files:"
          find dist/ -name "*.whl" -ls || echo "No .whl files found"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Publish to PyPI
        run: |
          if [ -n "$(find dist/ -name "*.whl" 2>/dev/null)" ]; then
            uv publish --index pypi
          else
            echo "No wheel files found to publish"
            exit 1
          fi